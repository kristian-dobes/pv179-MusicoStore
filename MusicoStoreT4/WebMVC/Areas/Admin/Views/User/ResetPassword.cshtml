@model WebMVC.Models.User.UserResetPasswordViewModel

@{
    ViewData["Title"] = "Reset Password";
}

<h1>Reset Password</h1>

@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        <ul>
            @foreach (var modelError in ViewData.ModelState.Values.SelectMany(v => v.Errors))
            {
                <li>@modelError.ErrorMessage</li>
            }
        </ul>
    </div>
}

<div>
    <h4>User Information</h4>
    <dl class="row">
        <dt class="col-sm-2">
            UserId
        </dt>
        <dd class="col-sm-10">
            @Model.UserToReset.UserId
        </dd>
        <dt class="col-sm-2">
            Email
        </dt>
        <dd class="col-sm-10">
            @Model.UserToReset.Email
        </dd>
    </dl>
</div>

<hr />

<form asp-action="ResetPassword" method="post">
    <!-- Hidden inputs to bind UserToReset properties -->
    <input asp-for="UserToReset.UserId" type="hidden" />
    <input asp-for="UserToReset.Email" type="hidden" />
    <input asp-for="UserToReset.Username" type="hidden" />
    <input asp-for="UserToReset.NumberOfOrders" type="hidden" />

    <div class="form-group">
        <label asp-for="NewPassword" class="control-label"></label>
        <input asp-for="NewPassword" class="form-control" type="password" />
        <span asp-validation-for="NewPassword" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="ConfirmPassword" class="control-label"></label>
        <input asp-for="ConfirmPassword" class="form-control" type="password" />
        <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
    </div>

    <div class="form-group">
        <input type="submit" value="Reset Password" class="btn btn-primary" />
        <a asp-area="Admin" asp-action="Index" class="btn btn-secondary">Cancel</a>
    </div>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

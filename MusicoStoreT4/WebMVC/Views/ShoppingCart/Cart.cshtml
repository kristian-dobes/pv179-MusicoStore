@model WebMVC.Models.ShoppingCart.ShoppingCart

<div class="container mt-5">
    <h2 class="mb-4">Shopping Cart</h2>

    @if (Model == null || Model.CartItems == null || !Model.CartItems.Any())
    {
        <div class="alert alert-warning text-center">Your shopping cart is empty.</div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-bordered table-striped align-middle">
                <thead class="table-dark">
                    <tr>
                        <th>Product</th>
                        <th>Quantity</th>
                        <th>Price</th>
                        <th>Subtotal</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.CartItems)
                    {
                        <tr>
                            <td>@item.ProductName</td>
                            <td class="text-center">
                                <button type="button" class="btn btn-outline-secondary btn-sm me-1" data-action="decrease" data-id="@item.ProductId">-</button>
                                <span class="fw-bold">@item.Quantity</span>
                                <button type="button" class="btn btn-outline-secondary btn-sm ms-1" data-action="increase" data-id="@item.ProductId">+</button>
                            </td>
                            <td>@item.Price.ToString("C")</td>
                            <td>@((item.Price * item.Quantity).ToString("C", System.Globalization.CultureInfo.CurrentCulture))</td>
                            <td>
                                <button type="button" class="btn btn-danger btn-sm" data-action="remove" data-id="@item.ProductId">
                                    <i class="fas fa-trash-alt"></i> Remove
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="d-flex justify-content-between align-items-center mt-4">
            <div>
                <h4>Subtotal: <span class="fw-bold">@Model.TotalAmount.ToString("C")</span></h4>
                @if (!string.IsNullOrEmpty(Model.AppliedGiftCardCode))
                {
                    <p class="text-success">Gift Card (@Model.AppliedGiftCardCode): -@Model.DiscountAmount.ToString("C")</p>
                }
                <h4>Total: <span class="text-primary fw-bold">@Model.FinalAmount.ToString("C")</span></h4>
            </div>
            <div>
                <form asp-controller="ShoppingCart" asp-action="Checkout" method="post">
                    <button type="submit" class="btn btn-success btn-lg">Checkout</button>
                </form>
            </div>
        </div>

        <div class="mt-4">
            <h5>Apply Gift Card</h5>
            <form id="applyGiftCardForm" class="d-flex align-items-center">
                <input type="text" id="giftCardCode" name="giftCardCode" class="form-control me-2" placeholder="Enter Gift Card Code" required />
                <button type="button" id="applyGiftCardButton" class="btn btn-primary">Apply Gift Card</button>
            </form>
            <p id="giftCardMessage" class="mt-2 text-danger"></p>
        </div>
    }
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        // Apply gift card functionality
        $('#applyGiftCardButton').on('click', function () {
            const giftCardCode = $('#giftCardCode').val();

            if (!giftCardCode) {
                alert('Please enter a gift card code.');
                return;
            }

            $.ajax({
                url: '/ShoppingCart/ApplyGiftCard',
                type: 'POST',
                data: { giftCardCode: giftCardCode },
                success: function (response) {
                    if (response.success) {
                        $('#giftCardMessage').text('Gift card applied: -$' + response.discountAmount);
                        $('h3:last').text('Total: $' + response.finalAmount);
                    } else {
                        $('#giftCardMessage').text(response.message);
                    }
                },
                error: function () {
                    $('#giftCardMessage').text('An error occurred while applying the gift card.');
                }
            });
        });

        // Handle quantity update and item removal buttons
        document.querySelectorAll('.btn').forEach(button => {
            button.addEventListener('click', function (event) {
                let action = event.target.dataset.action;
                let productId = event.target.dataset.id;

                if (action === 'increase') {
                    updateCart(productId, 1);
                } else if (action === 'decrease') {
                    updateCart(productId, -1);
                } else if (action === 'remove') {
                    removeFromCart(productId);
                }
            });
        });

        // Function to update the cart (increase or decrease quantity)
        function updateCart(productId, quantityChange) {
            fetch(`/ShoppingCart/UpdateQuantity?productId=${productId}&quantityChange=${quantityChange}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            }).then(response => response.json())
              .then(data => {
                  if (data.success) {
                      location.reload();
                  } else {
                      alert('An error occurred while updating the cart.');
                  }
              });
        }

        // Function to remove item from cart
        function removeFromCart(productId) {
            fetch(`/ShoppingCart/RemoveItem?productId=${productId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            }).then(response => response.json())
              .then(data => {
                  if (data.success) {
                      location.reload();
                  } else {
                      alert('An error occurred while removing the item.');
                  }
              });
        }
    });
</script>


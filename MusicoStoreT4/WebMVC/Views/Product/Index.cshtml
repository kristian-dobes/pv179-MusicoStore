@model WebMVC.Models.Product.ProductListViewModel

<div class="container my-5">
    <div class="text-center mb-4">
        <h1 class="display-4">Our Products</h1>
        <p class="text-muted">Explore our wide range of products and add your favorites to the cart!</p>
    </div>

    @if (Model.Products != null && Model.Products.Any())
    {
        <div class="row row-cols-1 row-cols-md-3 g-4">
            @foreach (var product in Model.Products)
            {
                <div class="col">
                    <div class="card h-100">
                        <div class="image-container">
                            @if (!string.IsNullOrEmpty(product.ImageFilePath))
                            {
                                <img src="@Url.Action("GetImage", "Image", new { productId = product.Id })"
                                        alt="@product.Name"
                                        class="product-image img-fluid rounded">
                            }
                            else
                            {
                                <div class="no-image-message">
                                    <p>No image available</p>
                                </div>
                            }
                        </div>
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title">@product.Name</h5>
                            <p class="card-text text-truncate" style="max-width: 250px;">@product.Description</p>
                            <p class="card-text fw-bold">@product.Price.ToString("C")</p>
                            <p class="card-text text-muted">Stock: @product.QuantityInStock</p>
                            <p class="card-text">Category: @product.PrimaryCategory.Name</p>
                            <p class="card-text">Manufacturer: @product.Manufacturer.Name</p>
                            <div class="mt-auto">
                                <!-- Button Row -->
                                <div class="d-flex justify-content-between align-items-center">
                                    <!-- Add to Cart -->
                                    <div class="add-to-cart d-flex align-items-center">
                                        <input type="number" id="quantity-@product.Id" value="1" min="1" max="@product.QuantityInStock" class="form-control form-control-sm me-2" style="width: 70px;" />
                                        <button class="btn btn-primary btn-sm" onclick="addToCart(@product.Id)">
                                            <i class="bi bi-cart-plus"></i> Add to Cart
                                        </button>
                                    </div>

                                    <!-- View Details -->
                                    <a href="@Url.Action("Details", "Product", new { id = product.Id })" class="btn btn-info btn-sm">
                                        View Details
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Pagination -->
        <nav aria-label="Product List Pagination" class="mt-4">
            <ul class="pagination justify-content-center">
                <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { page = Model.CurrentPage - 1 })" tabindex="-1">Previous</a>
                </li>
                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                        <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
                    </li>
                }
                <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { page = Model.CurrentPage + 1 })">Next</a>
                </li>
            </ul>
        </nav>

    }
    else
    {
        <div class="alert alert-warning text-center">
            No products found.
        </div>
    }
</div>

<script>
    function addToCart(productId) {
        const quantity = document.getElementById(`quantity-${productId}`).value;

        $.ajax({
            url: '/ShoppingCart/AddToCart',
            type: 'POST',
            data: {
                productId: productId,
                quantity: quantity
            },
            success: function (response) {
                if (response.success) {
                    alert(`Added to cart! Total: $${response.cartTotal}`);
                } else {
                    alert('Failed to add to cart.');
                }
            },
            error: function () {
                alert('An error occurred while adding to the cart.');
            }
        });
    }
</script>

<style>
    .image-container {
        height: 200px;
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: #f8f9fa;
        border-bottom: 1px solid #ddd;
    }

    .product-image {
        max-height: 100%;
        max-width: 100%;
        object-fit: cover;
    }

    .no-image-message {
        width: 100%;
        height: 100%;
        border: 1px dashed #ccc;
        border-radius: 8px;
        background-color: #e9ecef;
        font-size: 1rem;
        color: #6c757d;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .card {
        border-radius: 12px;
    }

    .add-to-cart input {
        margin-right: 8px;
    }
</style>

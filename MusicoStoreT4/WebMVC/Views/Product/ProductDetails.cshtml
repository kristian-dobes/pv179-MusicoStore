@model WebMVC.Models.Product.ProductHomeViewModel

<div class="product-details-container">
    <div class="image-container">
        @if (!string.IsNullOrEmpty(Model.ImageFilePath))
        {
            <img src="@Url.Action("GetImage", "Image", new { productId = Model.ProductId })" alt="@Model.ProductName" class="product-image" />
        }
        else
        {
            <div class="no-image-message d-flex justify-content-center align-items-center text-muted">
                <p>No image available for this product.</p>
            </div>
        }
    </div>

    <div class="details-container">
        <h1>@Model.ProductName</h1>
        <p><strong>Description:</strong> @Model.Description</p>
        <p><strong>Primary Category:</strong> @Model.PrimaryCategory</p>
        <p><strong>Price:</strong> @Model.Price.ToString("C")</p>

        <div class="d-flex align-items-center mt-3">
            <input type="number" id="quantity-@Model.ProductId" value="1" min="1" class="form-control form-control-sm me-2" style="width: 80px;" />
            <button class="btn btn-primary btn-sm" onclick="addToCart(@Model.ProductId, '@Model.ProductName', @Model.Price)">
                <i class="bi bi-cart-plus"></i> Add to Cart
            </button>
        </div>
    </div>
</div>

<script>
    function addToCart(productId, productName, price) {
        const quantity = document.getElementById(`quantity-${productId}`).value;

        $.ajax({
            url: '/ShoppingCart/AddToCart',
            type: 'POST',
            data: {
                productId: productId,
                productName: productName,
                price: price,
                quantity: quantity
            },
            success: function (response) {
                if (response.success) {
                    alert(`Added to cart! Total: $${response.cartTotal}`);
                } else {
                    alert('Failed to add to cart.');
                }
            },
            error: function () {
                alert('An error occurred while adding to the cart.');
            }
        });
    }
</script>

<style>
    .product-details-container {
        display: flex;
        align-items: flex-start;
        gap: 20px;
        margin-top: 20px;
    }

    .image-container {
        flex-shrink: 0;
        width: 200px;
        height: 200px;
        display: flex;
        justify-content: center;
        align-items: center;
        border: 1px solid #ccc;
        background-color: #f9f9f9;
    }

    .product-image {
        max-width: 100%;
        max-height: 100%;
        object-fit: cover;
        border-radius: 5px;
    }

    .no-image-placeholder {
        display: flex;
        justify-content: center;
        align-items: center;
        text-align: center;
        color: #999;
        font-size: 14px;
        font-style: italic;
        width: 100%;
        height: 100%;
    }

    .details-container {
        flex-grow: 1;
        text-align: left;
    }

        .details-container h1 {
            margin: 0 0 10px;
            font-size: 24px;
            text-align: left;
        }

        .details-container p {
            margin: 5px 0;
            line-height: 1.5;
            text-align: left;
        }
</style>
